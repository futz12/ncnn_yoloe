import os
import numpy as np
import tempfile, zipfile
import torch
import torch.nn as nn
import torch.nn.functional as F
try:
    import torchvision
    import torchaudio
except:
    pass

class Model(nn.Module):
    def __init__(self):
        super(Model, self).__init__()

        self.conv2d_1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=3, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_3 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_4 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_5 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_6 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_7 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_8 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_9 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_10 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_11 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_12 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_13 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_14 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_15 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_16 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_17 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_18 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_19 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_20 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_21 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_22 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_23 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_24 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_25 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_26 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_27 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_28 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_29 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_30 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_31 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_32 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_33 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_34 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_35 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_36 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_37 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_38 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_39 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_40 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_41 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_42 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_43 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_44 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_45 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_46 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_47 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_48 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_49 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_50 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_51 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_52 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_53 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_54 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_55 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_56 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_57 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_58 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_59 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_60 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_61 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_62 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_63 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_64 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_65 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_66 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_67 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_68 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_69 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_70 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_71 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_72 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_73 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_74 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_75 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_76 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_77 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_78 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_79 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_80 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_81 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_82 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_83 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_84 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_85 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_86 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_87 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_88 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_89 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_90 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_91 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_92 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_93 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_94 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_95 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_96 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_97 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_98 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_99 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_100 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_101 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_102 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_103 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_104 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_105 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_106 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_107 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_108 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_109 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_110 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_111 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_112 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_113 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_114 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_115 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_116 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_117 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_118 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_119 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_120 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv_transpose2d_0 = nn.ConvTranspose2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(2,2), out_channels=256, output_padding=(0,0), padding=(0,0), stride=(2,2))
        self.conv2d_121 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_122 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_123 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_124 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=768, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_125 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_126 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_127 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_128 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_129 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_130 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_131 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_132 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_133 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_135 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_136 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_137 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_138 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_139 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_140 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_141 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_142 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_143 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_144 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_145 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_146 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_147 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_148 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_149 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_150 = nn.Conv2d(bias=True, dilation=(1,1), groups=512, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_151 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_152 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_153 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_154 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_155 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_156 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_157 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_158 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_159 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_160 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_161 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_163 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_164 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_165 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_166 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_167 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_168 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_169 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_170 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_171 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_172 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_173 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_174 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_175 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_176 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_177 = nn.Conv2d(bias=True, dilation=(1,1), groups=512, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_178 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_179 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_180 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_181 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_182 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_183 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_184 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))

        archive = zipfile.ZipFile('yoloe_11l_seg_pnnx_rebuild.pnnx.bin', 'r')
        self.conv2d_1.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_1.bias', (64), 'float32')
        self.conv2d_1.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_1.weight', (64,3,3,3), 'float32')
        self.conv2d_2.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_2.bias', (128), 'float32')
        self.conv2d_2.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_2.weight', (128,64,3,3), 'float32')
        self.conv2d_3.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_3.bias', (128), 'float32')
        self.conv2d_3.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_3.weight', (128,128,1,1), 'float32')
        self.conv2d_4.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_4.bias', (32), 'float32')
        self.conv2d_4.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_4.weight', (32,64,1,1), 'float32')
        self.conv2d_5.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_5.bias', (32), 'float32')
        self.conv2d_5.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_5.weight', (32,64,1,1), 'float32')
        self.conv2d_6.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_6.bias', (32), 'float32')
        self.conv2d_6.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_6.weight', (32,32,3,3), 'float32')
        self.conv2d_7.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_7.bias', (32), 'float32')
        self.conv2d_7.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_7.weight', (32,32,3,3), 'float32')
        self.conv2d_8.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_8.bias', (32), 'float32')
        self.conv2d_8.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_8.weight', (32,32,3,3), 'float32')
        self.conv2d_9.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_9.bias', (32), 'float32')
        self.conv2d_9.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_9.weight', (32,32,3,3), 'float32')
        self.conv2d_10.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_10.bias', (64), 'float32')
        self.conv2d_10.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_10.weight', (64,64,1,1), 'float32')
        self.conv2d_11.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_11.bias', (32), 'float32')
        self.conv2d_11.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_11.weight', (32,64,1,1), 'float32')
        self.conv2d_12.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_12.bias', (32), 'float32')
        self.conv2d_12.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_12.weight', (32,64,1,1), 'float32')
        self.conv2d_13.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_13.bias', (32), 'float32')
        self.conv2d_13.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_13.weight', (32,32,3,3), 'float32')
        self.conv2d_14.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_14.bias', (32), 'float32')
        self.conv2d_14.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_14.weight', (32,32,3,3), 'float32')
        self.conv2d_15.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_15.bias', (32), 'float32')
        self.conv2d_15.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_15.weight', (32,32,3,3), 'float32')
        self.conv2d_16.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_16.bias', (32), 'float32')
        self.conv2d_16.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_16.weight', (32,32,3,3), 'float32')
        self.conv2d_17.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_17.bias', (64), 'float32')
        self.conv2d_17.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_17.weight', (64,64,1,1), 'float32')
        self.conv2d_18.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_18.bias', (256), 'float32')
        self.conv2d_18.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_18.weight', (256,256,1,1), 'float32')
        self.conv2d_19.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_19.bias', (256), 'float32')
        self.conv2d_19.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_19.weight', (256,256,3,3), 'float32')
        self.conv2d_20.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_20.bias', (256), 'float32')
        self.conv2d_20.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_20.weight', (256,256,1,1), 'float32')
        self.conv2d_21.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_21.bias', (64), 'float32')
        self.conv2d_21.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_21.weight', (64,128,1,1), 'float32')
        self.conv2d_22.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_22.bias', (64), 'float32')
        self.conv2d_22.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_22.weight', (64,128,1,1), 'float32')
        self.conv2d_23.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_23.bias', (64), 'float32')
        self.conv2d_23.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_23.weight', (64,64,3,3), 'float32')
        self.conv2d_24.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_24.bias', (64), 'float32')
        self.conv2d_24.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_24.weight', (64,64,3,3), 'float32')
        self.conv2d_25.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_25.bias', (64), 'float32')
        self.conv2d_25.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_25.weight', (64,64,3,3), 'float32')
        self.conv2d_26.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_26.bias', (64), 'float32')
        self.conv2d_26.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_26.weight', (64,64,3,3), 'float32')
        self.conv2d_27.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_27.bias', (128), 'float32')
        self.conv2d_27.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_27.weight', (128,128,1,1), 'float32')
        self.conv2d_28.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_28.bias', (64), 'float32')
        self.conv2d_28.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_28.weight', (64,128,1,1), 'float32')
        self.conv2d_29.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_29.bias', (64), 'float32')
        self.conv2d_29.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_29.weight', (64,128,1,1), 'float32')
        self.conv2d_30.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_30.bias', (64), 'float32')
        self.conv2d_30.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_30.weight', (64,64,3,3), 'float32')
        self.conv2d_31.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_31.bias', (64), 'float32')
        self.conv2d_31.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_31.weight', (64,64,3,3), 'float32')
        self.conv2d_32.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_32.bias', (64), 'float32')
        self.conv2d_32.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_32.weight', (64,64,3,3), 'float32')
        self.conv2d_33.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_33.bias', (64), 'float32')
        self.conv2d_33.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_33.weight', (64,64,3,3), 'float32')
        self.conv2d_34.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_34.bias', (128), 'float32')
        self.conv2d_34.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_34.weight', (128,128,1,1), 'float32')
        self.conv2d_35.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_35.bias', (512), 'float32')
        self.conv2d_35.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_35.weight', (512,512,1,1), 'float32')
        self.conv2d_36.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_36.bias', (512), 'float32')
        self.conv2d_36.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_36.weight', (512,512,3,3), 'float32')
        self.conv2d_37.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_37.bias', (512), 'float32')
        self.conv2d_37.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_37.weight', (512,512,1,1), 'float32')
        self.conv2d_38.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_38.bias', (128), 'float32')
        self.conv2d_38.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_38.weight', (128,256,1,1), 'float32')
        self.conv2d_39.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_39.bias', (128), 'float32')
        self.conv2d_39.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_39.weight', (128,256,1,1), 'float32')
        self.conv2d_40.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_40.bias', (128), 'float32')
        self.conv2d_40.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_40.weight', (128,128,3,3), 'float32')
        self.conv2d_41.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_41.bias', (128), 'float32')
        self.conv2d_41.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_41.weight', (128,128,3,3), 'float32')
        self.conv2d_42.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_42.bias', (128), 'float32')
        self.conv2d_42.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_42.weight', (128,128,3,3), 'float32')
        self.conv2d_43.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_43.bias', (128), 'float32')
        self.conv2d_43.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_43.weight', (128,128,3,3), 'float32')
        self.conv2d_44.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_44.bias', (256), 'float32')
        self.conv2d_44.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_44.weight', (256,256,1,1), 'float32')
        self.conv2d_45.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_45.bias', (128), 'float32')
        self.conv2d_45.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_45.weight', (128,256,1,1), 'float32')
        self.conv2d_46.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_46.bias', (128), 'float32')
        self.conv2d_46.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_46.weight', (128,256,1,1), 'float32')
        self.conv2d_47.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_47.bias', (128), 'float32')
        self.conv2d_47.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_47.weight', (128,128,3,3), 'float32')
        self.conv2d_48.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_48.bias', (128), 'float32')
        self.conv2d_48.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_48.weight', (128,128,3,3), 'float32')
        self.conv2d_49.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_49.bias', (128), 'float32')
        self.conv2d_49.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_49.weight', (128,128,3,3), 'float32')
        self.conv2d_50.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_50.bias', (128), 'float32')
        self.conv2d_50.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_50.weight', (128,128,3,3), 'float32')
        self.conv2d_51.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_51.bias', (256), 'float32')
        self.conv2d_51.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_51.weight', (256,256,1,1), 'float32')
        self.conv2d_52.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_52.bias', (512), 'float32')
        self.conv2d_52.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_52.weight', (512,1024,1,1), 'float32')
        self.conv2d_53.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_53.bias', (512), 'float32')
        self.conv2d_53.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_53.weight', (512,512,3,3), 'float32')
        self.conv2d_54.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_54.bias', (512), 'float32')
        self.conv2d_54.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_54.weight', (512,512,1,1), 'float32')
        self.conv2d_55.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_55.bias', (128), 'float32')
        self.conv2d_55.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_55.weight', (128,256,1,1), 'float32')
        self.conv2d_56.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_56.bias', (128), 'float32')
        self.conv2d_56.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_56.weight', (128,256,1,1), 'float32')
        self.conv2d_57.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_57.bias', (128), 'float32')
        self.conv2d_57.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_57.weight', (128,128,3,3), 'float32')
        self.conv2d_58.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_58.bias', (128), 'float32')
        self.conv2d_58.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_58.weight', (128,128,3,3), 'float32')
        self.conv2d_59.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_59.bias', (128), 'float32')
        self.conv2d_59.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_59.weight', (128,128,3,3), 'float32')
        self.conv2d_60.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_60.bias', (128), 'float32')
        self.conv2d_60.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_60.weight', (128,128,3,3), 'float32')
        self.conv2d_61.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_61.bias', (256), 'float32')
        self.conv2d_61.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_61.weight', (256,256,1,1), 'float32')
        self.conv2d_62.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_62.bias', (128), 'float32')
        self.conv2d_62.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_62.weight', (128,256,1,1), 'float32')
        self.conv2d_63.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_63.bias', (128), 'float32')
        self.conv2d_63.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_63.weight', (128,256,1,1), 'float32')
        self.conv2d_64.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_64.bias', (128), 'float32')
        self.conv2d_64.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_64.weight', (128,128,3,3), 'float32')
        self.conv2d_65.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_65.bias', (128), 'float32')
        self.conv2d_65.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_65.weight', (128,128,3,3), 'float32')
        self.conv2d_66.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_66.bias', (128), 'float32')
        self.conv2d_66.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_66.weight', (128,128,3,3), 'float32')
        self.conv2d_67.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_67.bias', (128), 'float32')
        self.conv2d_67.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_67.weight', (128,128,3,3), 'float32')
        self.conv2d_68.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_68.bias', (256), 'float32')
        self.conv2d_68.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_68.weight', (256,256,1,1), 'float32')
        self.conv2d_69.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_69.bias', (512), 'float32')
        self.conv2d_69.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_69.weight', (512,1024,1,1), 'float32')
        self.conv2d_70.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_70.bias', (256), 'float32')
        self.conv2d_70.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_70.weight', (256,512,1,1), 'float32')
        self.conv2d_71.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_71.bias', (512), 'float32')
        self.conv2d_71.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_71.weight', (512,1024,1,1), 'float32')
        self.conv2d_72.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_72.bias', (512), 'float32')
        self.conv2d_72.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_72.weight', (512,512,1,1), 'float32')
        self.conv2d_73.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_73.bias', (512), 'float32')
        self.conv2d_73.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_73.weight', (512,256,1,1), 'float32')
        self.conv2d_74.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_74.bias', (256), 'float32')
        self.conv2d_74.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_74.weight', (256,1,3,3), 'float32')
        self.conv2d_75.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_75.bias', (256), 'float32')
        self.conv2d_75.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_75.weight', (256,256,1,1), 'float32')
        self.conv2d_76.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_76.bias', (512), 'float32')
        self.conv2d_76.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_76.weight', (512,256,1,1), 'float32')
        self.conv2d_77.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_77.bias', (256), 'float32')
        self.conv2d_77.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_77.weight', (256,512,1,1), 'float32')
        self.conv2d_78.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_78.bias', (512), 'float32')
        self.conv2d_78.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_78.weight', (512,256,1,1), 'float32')
        self.conv2d_79.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_79.bias', (256), 'float32')
        self.conv2d_79.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_79.weight', (256,1,3,3), 'float32')
        self.conv2d_80.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_80.bias', (256), 'float32')
        self.conv2d_80.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_80.weight', (256,256,1,1), 'float32')
        self.conv2d_81.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_81.bias', (512), 'float32')
        self.conv2d_81.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_81.weight', (512,256,1,1), 'float32')
        self.conv2d_82.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_82.bias', (256), 'float32')
        self.conv2d_82.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_82.weight', (256,512,1,1), 'float32')
        self.conv2d_83.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_83.bias', (512), 'float32')
        self.conv2d_83.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_83.weight', (512,512,1,1), 'float32')
        self.conv2d_84.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_84.bias', (512), 'float32')
        self.conv2d_84.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_84.weight', (512,1024,1,1), 'float32')
        self.conv2d_85.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_85.bias', (128), 'float32')
        self.conv2d_85.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_85.weight', (128,256,1,1), 'float32')
        self.conv2d_86.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_86.bias', (128), 'float32')
        self.conv2d_86.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_86.weight', (128,256,1,1), 'float32')
        self.conv2d_87.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_87.bias', (128), 'float32')
        self.conv2d_87.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_87.weight', (128,128,3,3), 'float32')
        self.conv2d_88.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_88.bias', (128), 'float32')
        self.conv2d_88.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_88.weight', (128,128,3,3), 'float32')
        self.conv2d_89.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_89.bias', (128), 'float32')
        self.conv2d_89.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_89.weight', (128,128,3,3), 'float32')
        self.conv2d_90.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_90.bias', (128), 'float32')
        self.conv2d_90.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_90.weight', (128,128,3,3), 'float32')
        self.conv2d_91.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_91.bias', (256), 'float32')
        self.conv2d_91.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_91.weight', (256,256,1,1), 'float32')
        self.conv2d_92.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_92.bias', (128), 'float32')
        self.conv2d_92.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_92.weight', (128,256,1,1), 'float32')
        self.conv2d_93.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_93.bias', (128), 'float32')
        self.conv2d_93.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_93.weight', (128,256,1,1), 'float32')
        self.conv2d_94.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_94.bias', (128), 'float32')
        self.conv2d_94.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_94.weight', (128,128,3,3), 'float32')
        self.conv2d_95.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_95.bias', (128), 'float32')
        self.conv2d_95.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_95.weight', (128,128,3,3), 'float32')
        self.conv2d_96.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_96.bias', (128), 'float32')
        self.conv2d_96.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_96.weight', (128,128,3,3), 'float32')
        self.conv2d_97.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_97.bias', (128), 'float32')
        self.conv2d_97.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_97.weight', (128,128,3,3), 'float32')
        self.conv2d_98.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_98.bias', (256), 'float32')
        self.conv2d_98.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_98.weight', (256,256,1,1), 'float32')
        self.conv2d_99.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_99.bias', (512), 'float32')
        self.conv2d_99.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_99.weight', (512,1024,1,1), 'float32')
        self.conv2d_100.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_100.bias', (256), 'float32')
        self.conv2d_100.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_100.weight', (256,1024,1,1), 'float32')
        self.conv2d_101.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_101.bias', (64), 'float32')
        self.conv2d_101.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_101.weight', (64,128,1,1), 'float32')
        self.conv2d_102.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_102.bias', (64), 'float32')
        self.conv2d_102.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_102.weight', (64,128,1,1), 'float32')
        self.conv2d_103.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_103.bias', (64), 'float32')
        self.conv2d_103.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_103.weight', (64,64,3,3), 'float32')
        self.conv2d_104.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_104.bias', (64), 'float32')
        self.conv2d_104.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_104.weight', (64,64,3,3), 'float32')
        self.conv2d_105.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_105.bias', (64), 'float32')
        self.conv2d_105.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_105.weight', (64,64,3,3), 'float32')
        self.conv2d_106.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_106.bias', (64), 'float32')
        self.conv2d_106.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_106.weight', (64,64,3,3), 'float32')
        self.conv2d_107.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_107.bias', (128), 'float32')
        self.conv2d_107.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_107.weight', (128,128,1,1), 'float32')
        self.conv2d_108.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_108.bias', (64), 'float32')
        self.conv2d_108.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_108.weight', (64,128,1,1), 'float32')
        self.conv2d_109.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_109.bias', (64), 'float32')
        self.conv2d_109.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_109.weight', (64,128,1,1), 'float32')
        self.conv2d_110.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_110.bias', (64), 'float32')
        self.conv2d_110.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_110.weight', (64,64,3,3), 'float32')
        self.conv2d_111.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_111.bias', (64), 'float32')
        self.conv2d_111.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_111.weight', (64,64,3,3), 'float32')
        self.conv2d_112.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_112.bias', (64), 'float32')
        self.conv2d_112.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_112.weight', (64,64,3,3), 'float32')
        self.conv2d_113.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_113.bias', (64), 'float32')
        self.conv2d_113.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_113.weight', (64,64,3,3), 'float32')
        self.conv2d_114.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_114.bias', (128), 'float32')
        self.conv2d_114.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_114.weight', (128,128,1,1), 'float32')
        self.conv2d_115.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_115.bias', (256), 'float32')
        self.conv2d_115.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_115.weight', (256,512,1,1), 'float32')
        self.conv2d_116.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_116.bias', (256), 'float32')
        self.conv2d_116.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_116.weight', (256,256,3,3), 'float32')
        self.conv2d_117.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_117.bias', (256), 'float32')
        self.conv2d_117.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_117.weight', (256,256,3,3), 'float32')
        self.conv2d_118.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_118.bias', (64), 'float32')
        self.conv2d_118.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_118.weight', (64,256,3,3), 'float32')
        self.conv2d_119.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_119.bias', (64), 'float32')
        self.conv2d_119.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_119.weight', (64,256,3,3), 'float32')
        self.conv2d_120.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_120.bias', (256), 'float32')
        self.conv2d_120.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_120.weight', (256,1,3,3), 'float32')
        self.conv_transpose2d_0.bias = self.load_pnnx_bin_as_parameter(archive, 'conv_transpose2d_0.bias', (256), 'float32')
        self.conv_transpose2d_0.weight = self.load_pnnx_bin_as_parameter(archive, 'conv_transpose2d_0.weight', (256,256,2,2), 'float32')
        self.conv2d_121.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_121.bias', (64), 'float32')
        self.conv2d_121.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_121.weight', (64,64,3,3), 'float32')
        self.conv2d_122.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_122.bias', (64), 'float32')
        self.conv2d_122.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_122.weight', (64,64,3,3), 'float32')
        self.conv2d_123.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_123.bias', (256), 'float32')
        self.conv2d_123.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_123.weight', (256,256,1,1), 'float32')
        self.conv2d_124.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_124.bias', (512), 'float32')
        self.conv2d_124.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_124.weight', (512,768,1,1), 'float32')
        self.conv2d_125.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_125.bias', (256), 'float32')
        self.conv2d_125.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_125.weight', (256,256,3,3), 'float32')
        self.conv2d_126.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_126.bias', (32), 'float32')
        self.conv2d_126.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_126.weight', (32,64,1,1), 'float32')
        self.conv2d_127.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_127.bias', (64), 'float32')
        self.conv2d_127.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_127.weight', (64,64,1,1), 'float32')
        self.conv2d_128.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_128.bias', (256), 'float32')
        self.conv2d_128.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_128.weight', (256,1,3,3), 'float32')
        self.conv2d_129.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_129.bias', (32), 'float32')
        self.conv2d_129.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_129.weight', (32,256,1,1), 'float32')
        self.conv2d_130.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_130.bias', (128), 'float32')
        self.conv2d_130.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_130.weight', (128,256,1,1), 'float32')
        self.conv2d_131.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_131.bias', (128), 'float32')
        self.conv2d_131.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_131.weight', (128,256,1,1), 'float32')
        self.conv2d_132.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_132.bias', (256), 'float32')
        self.conv2d_132.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_132.weight', (256,256,1,1), 'float32')
        self.conv2d_133.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_133.bias', (128), 'float32')
        self.conv2d_133.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_133.weight', (128,128,3,3), 'float32')
        self.conv2d_135.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_135.bias', (128), 'float32')
        self.conv2d_135.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_135.weight', (128,128,3,3), 'float32')
        self.conv2d_136.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_136.bias', (128), 'float32')
        self.conv2d_136.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_136.weight', (128,128,3,3), 'float32')
        self.conv2d_137.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_137.bias', (128), 'float32')
        self.conv2d_137.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_137.weight', (128,128,3,3), 'float32')
        self.conv2d_138.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_138.bias', (256), 'float32')
        self.conv2d_138.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_138.weight', (256,256,1,1), 'float32')
        self.conv2d_139.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_139.bias', (128), 'float32')
        self.conv2d_139.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_139.weight', (128,256,1,1), 'float32')
        self.conv2d_140.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_140.bias', (128), 'float32')
        self.conv2d_140.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_140.weight', (128,256,1,1), 'float32')
        self.conv2d_141.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_141.bias', (128), 'float32')
        self.conv2d_141.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_141.weight', (128,128,3,3), 'float32')
        self.conv2d_142.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_142.bias', (128), 'float32')
        self.conv2d_142.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_142.weight', (128,128,3,3), 'float32')
        self.conv2d_143.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_143.bias', (128), 'float32')
        self.conv2d_143.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_143.weight', (128,128,3,3), 'float32')
        self.conv2d_144.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_144.bias', (128), 'float32')
        self.conv2d_144.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_144.weight', (128,128,3,3), 'float32')
        self.conv2d_145.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_145.bias', (256), 'float32')
        self.conv2d_145.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_145.weight', (256,256,1,1), 'float32')
        self.conv2d_146.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_146.bias', (512), 'float32')
        self.conv2d_146.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_146.weight', (512,1024,1,1), 'float32')
        self.conv2d_147.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_147.bias', (512), 'float32')
        self.conv2d_147.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_147.weight', (512,512,3,3), 'float32')
        self.conv2d_148.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_148.bias', (64), 'float32')
        self.conv2d_148.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_148.weight', (64,512,3,3), 'float32')
        self.conv2d_149.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_149.bias', (64), 'float32')
        self.conv2d_149.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_149.weight', (64,512,3,3), 'float32')
        self.conv2d_150.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_150.bias', (512), 'float32')
        self.conv2d_150.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_150.weight', (512,1,3,3), 'float32')
        self.conv2d_151.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_151.bias', (64), 'float32')
        self.conv2d_151.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_151.weight', (64,64,3,3), 'float32')
        self.conv2d_152.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_152.bias', (64), 'float32')
        self.conv2d_152.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_152.weight', (64,64,3,3), 'float32')
        self.conv2d_153.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_153.bias', (256), 'float32')
        self.conv2d_153.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_153.weight', (256,512,1,1), 'float32')
        self.conv2d_154.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_154.bias', (512), 'float32')
        self.conv2d_154.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_154.weight', (512,1024,1,1), 'float32')
        self.conv2d_155.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_155.bias', (32), 'float32')
        self.conv2d_155.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_155.weight', (32,64,1,1), 'float32')
        self.conv2d_156.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_156.bias', (64), 'float32')
        self.conv2d_156.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_156.weight', (64,64,1,1), 'float32')
        self.conv2d_157.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_157.bias', (256), 'float32')
        self.conv2d_157.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_157.weight', (256,1,3,3), 'float32')
        self.conv2d_158.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_158.bias', (128), 'float32')
        self.conv2d_158.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_158.weight', (128,256,1,1), 'float32')
        self.conv2d_159.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_159.bias', (128), 'float32')
        self.conv2d_159.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_159.weight', (128,256,1,1), 'float32')
        self.conv2d_160.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_160.bias', (256), 'float32')
        self.conv2d_160.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_160.weight', (256,256,1,1), 'float32')
        self.conv2d_161.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_161.bias', (128), 'float32')
        self.conv2d_161.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_161.weight', (128,128,3,3), 'float32')
        self.conv2d_163.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_163.bias', (128), 'float32')
        self.conv2d_163.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_163.weight', (128,128,3,3), 'float32')
        self.conv2d_164.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_164.bias', (128), 'float32')
        self.conv2d_164.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_164.weight', (128,128,3,3), 'float32')
        self.conv2d_165.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_165.bias', (128), 'float32')
        self.conv2d_165.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_165.weight', (128,128,3,3), 'float32')
        self.conv2d_166.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_166.bias', (256), 'float32')
        self.conv2d_166.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_166.weight', (256,256,1,1), 'float32')
        self.conv2d_167.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_167.bias', (128), 'float32')
        self.conv2d_167.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_167.weight', (128,256,1,1), 'float32')
        self.conv2d_168.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_168.bias', (128), 'float32')
        self.conv2d_168.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_168.weight', (128,256,1,1), 'float32')
        self.conv2d_169.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_169.bias', (128), 'float32')
        self.conv2d_169.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_169.weight', (128,128,3,3), 'float32')
        self.conv2d_170.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_170.bias', (128), 'float32')
        self.conv2d_170.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_170.weight', (128,128,3,3), 'float32')
        self.conv2d_171.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_171.bias', (128), 'float32')
        self.conv2d_171.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_171.weight', (128,128,3,3), 'float32')
        self.conv2d_172.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_172.bias', (128), 'float32')
        self.conv2d_172.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_172.weight', (128,128,3,3), 'float32')
        self.conv2d_173.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_173.bias', (256), 'float32')
        self.conv2d_173.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_173.weight', (256,256,1,1), 'float32')
        self.conv2d_174.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_174.bias', (512), 'float32')
        self.conv2d_174.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_174.weight', (512,1024,1,1), 'float32')
        self.conv2d_175.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_175.bias', (64), 'float32')
        self.conv2d_175.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_175.weight', (64,512,3,3), 'float32')
        self.conv2d_176.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_176.bias', (64), 'float32')
        self.conv2d_176.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_176.weight', (64,512,3,3), 'float32')
        self.conv2d_177.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_177.bias', (512), 'float32')
        self.conv2d_177.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_177.weight', (512,1,3,3), 'float32')
        self.conv2d_178.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_178.bias', (64), 'float32')
        self.conv2d_178.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_178.weight', (64,64,3,3), 'float32')
        self.conv2d_179.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_179.bias', (64), 'float32')
        self.conv2d_179.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_179.weight', (64,64,3,3), 'float32')
        self.conv2d_180.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_180.bias', (256), 'float32')
        self.conv2d_180.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_180.weight', (256,512,1,1), 'float32')
        self.conv2d_181.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_181.bias', (32), 'float32')
        self.conv2d_181.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_181.weight', (32,64,1,1), 'float32')
        self.conv2d_182.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_182.bias', (64), 'float32')
        self.conv2d_182.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_182.weight', (64,64,1,1), 'float32')
        self.conv2d_183.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_183.bias', (256), 'float32')
        self.conv2d_183.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_183.weight', (256,1,3,3), 'float32')
        self.conv2d_184.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_184.bias', (256), 'float32')
        self.conv2d_184.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_184.weight', (256,256,1,1), 'float32')
        archive.close()

    def load_pnnx_bin_as_parameter(self, archive, key, shape, dtype, requires_grad=True):
        return nn.Parameter(self.load_pnnx_bin_as_tensor(archive, key, shape, dtype), requires_grad)

    def load_pnnx_bin_as_tensor(self, archive, key, shape, dtype):
        fd, tmppath = tempfile.mkstemp()
        with os.fdopen(fd, 'wb') as tmpf, archive.open(key) as keyfile:
            tmpf.write(keyfile.read())
        m = np.memmap(tmppath, dtype=dtype, mode='r', shape=shape).copy()
        os.remove(tmppath)
        return torch.from_numpy(m)

    def forward(self, v_0, v_1, v_2, v_3, v_4, v_5, v_6):
        v_7 = self.conv2d_1(v_0)
        v_8 = F.silu(input=v_7)
        v_9 = self.conv2d_2(v_8)
        v_10 = F.silu(input=v_9)
        v_11 = self.conv2d_3(v_10)
        v_12 = F.silu(input=v_11)
        v_13, v_14 = torch.split(tensor=v_12, dim=1, split_size_or_sections=(64,64))
        v_15 = self.conv2d_4(v_14)
        v_16 = self.conv2d_5(v_14)
        v_17 = F.silu(input=v_15)
        v_18 = F.silu(input=v_16)
        v_19 = self.conv2d_6(v_17)
        v_20 = F.silu(input=v_19)
        v_21 = self.conv2d_7(v_20)
        v_22 = F.sigmoid(input=v_21)
        v_23 = (v_17 + (v_21 * v_22))
        v_24 = self.conv2d_8(v_23)
        v_25 = F.silu(input=v_24)
        v_26 = self.conv2d_9(v_25)
        v_27 = F.sigmoid(input=v_26)
        v_28 = (v_23 + (v_26 * v_27))
        v_29 = torch.cat((v_28, v_18), dim=1)
        v_30 = self.conv2d_10(v_29)
        v_31 = F.silu(input=v_30)
        v_32 = self.conv2d_11(v_31)
        v_33 = self.conv2d_12(v_31)
        v_34 = F.silu(input=v_32)
        v_35 = F.silu(input=v_33)
        v_36 = self.conv2d_13(v_34)
        v_37 = F.silu(input=v_36)
        v_38 = self.conv2d_14(v_37)
        v_39 = F.sigmoid(input=v_38)
        v_40 = (v_34 + (v_38 * v_39))
        v_41 = self.conv2d_15(v_40)
        v_42 = F.silu(input=v_41)
        v_43 = self.conv2d_16(v_42)
        v_44 = F.sigmoid(input=v_43)
        v_45 = (v_40 + (v_43 * v_44))
        v_46 = torch.cat((v_45, v_35), dim=1)
        v_47 = self.conv2d_17(v_46)
        v_48 = F.silu(input=v_47)
        v_49 = torch.cat((v_13, v_14, v_31, v_48), dim=1)
        v_50 = self.conv2d_18(v_49)
        v_51 = F.silu(input=v_50)
        v_52 = self.conv2d_19(v_51)
        v_53 = F.silu(input=v_52)
        v_54 = self.conv2d_20(v_53)
        v_55 = F.silu(input=v_54)
        v_56, v_57 = torch.split(tensor=v_55, dim=1, split_size_or_sections=(128,128))
        v_58 = self.conv2d_21(v_57)
        v_59 = self.conv2d_22(v_57)
        v_60 = F.silu(input=v_58)
        v_61 = F.silu(input=v_59)
        v_62 = self.conv2d_23(v_60)
        v_63 = F.silu(input=v_62)
        v_64 = self.conv2d_24(v_63)
        v_65 = F.sigmoid(input=v_64)
        v_66 = (v_60 + (v_64 * v_65))
        v_67 = self.conv2d_25(v_66)
        v_68 = F.silu(input=v_67)
        v_69 = self.conv2d_26(v_68)
        v_70 = F.sigmoid(input=v_69)
        v_71 = (v_66 + (v_69 * v_70))
        v_72 = torch.cat((v_71, v_61), dim=1)
        v_73 = self.conv2d_27(v_72)
        v_74 = F.silu(input=v_73)
        v_75 = self.conv2d_28(v_74)
        v_76 = self.conv2d_29(v_74)
        v_77 = F.silu(input=v_75)
        v_78 = F.silu(input=v_76)
        v_79 = self.conv2d_30(v_77)
        v_80 = F.silu(input=v_79)
        v_81 = self.conv2d_31(v_80)
        v_82 = F.sigmoid(input=v_81)
        v_83 = (v_77 + (v_81 * v_82))
        v_84 = self.conv2d_32(v_83)
        v_85 = F.silu(input=v_84)
        v_86 = self.conv2d_33(v_85)
        v_87 = F.sigmoid(input=v_86)
        v_88 = (v_83 + (v_86 * v_87))
        v_89 = torch.cat((v_88, v_78), dim=1)
        v_90 = self.conv2d_34(v_89)
        v_91 = F.silu(input=v_90)
        v_92 = torch.cat((v_56, v_57, v_74, v_91), dim=1)
        v_93 = self.conv2d_35(v_92)
        v_94 = F.silu(input=v_93)
        v_95 = self.conv2d_36(v_94)
        v_96 = F.silu(input=v_95)
        v_97 = self.conv2d_37(v_96)
        v_98 = F.silu(input=v_97)
        v_99, v_100 = torch.split(tensor=v_98, dim=1, split_size_or_sections=(256,256))
        v_101 = self.conv2d_38(v_100)
        v_102 = self.conv2d_39(v_100)
        v_103 = F.silu(input=v_101)
        v_104 = F.silu(input=v_102)
        v_105 = self.conv2d_40(v_103)
        v_106 = F.silu(input=v_105)
        v_107 = self.conv2d_41(v_106)
        v_108 = F.sigmoid(input=v_107)
        v_109 = (v_103 + (v_107 * v_108))
        v_110 = self.conv2d_42(v_109)
        v_111 = F.silu(input=v_110)
        v_112 = self.conv2d_43(v_111)
        v_113 = F.sigmoid(input=v_112)
        v_114 = (v_109 + (v_112 * v_113))
        v_115 = torch.cat((v_114, v_104), dim=1)
        v_116 = self.conv2d_44(v_115)
        v_117 = F.silu(input=v_116)
        v_118 = self.conv2d_45(v_117)
        v_119 = self.conv2d_46(v_117)
        v_120 = F.silu(input=v_118)
        v_121 = F.silu(input=v_119)
        v_122 = self.conv2d_47(v_120)
        v_123 = F.silu(input=v_122)
        v_124 = self.conv2d_48(v_123)
        v_125 = F.sigmoid(input=v_124)
        v_126 = (v_120 + (v_124 * v_125))
        v_127 = self.conv2d_49(v_126)
        v_128 = F.silu(input=v_127)
        v_129 = self.conv2d_50(v_128)
        v_130 = F.sigmoid(input=v_129)
        v_131 = (v_126 + (v_129 * v_130))
        v_132 = torch.cat((v_131, v_121), dim=1)
        v_133 = self.conv2d_51(v_132)
        v_134 = F.silu(input=v_133)
        v_135 = torch.cat((v_99, v_100, v_117, v_134), dim=1)
        v_136 = self.conv2d_52(v_135)
        v_137 = F.silu(input=v_136)
        v_138 = self.conv2d_53(v_137)
        v_139 = F.silu(input=v_138)
        v_140 = self.conv2d_54(v_139)
        v_141 = F.silu(input=v_140)
        v_142, v_143 = torch.split(tensor=v_141, dim=1, split_size_or_sections=(256,256))
        v_144 = self.conv2d_55(v_143)
        v_145 = self.conv2d_56(v_143)
        v_146 = F.silu(input=v_144)
        v_147 = F.silu(input=v_145)
        v_148 = self.conv2d_57(v_146)
        v_149 = F.silu(input=v_148)
        v_150 = self.conv2d_58(v_149)
        v_151 = F.sigmoid(input=v_150)
        v_152 = (v_146 + (v_150 * v_151))
        v_153 = self.conv2d_59(v_152)
        v_154 = F.silu(input=v_153)
        v_155 = self.conv2d_60(v_154)
        v_156 = F.sigmoid(input=v_155)
        v_157 = (v_152 + (v_155 * v_156))
        v_158 = torch.cat((v_157, v_147), dim=1)
        v_159 = self.conv2d_61(v_158)
        v_160 = F.silu(input=v_159)
        v_161 = self.conv2d_62(v_160)
        v_162 = self.conv2d_63(v_160)
        v_163 = F.silu(input=v_161)
        v_164 = F.silu(input=v_162)
        v_165 = self.conv2d_64(v_163)
        v_166 = F.silu(input=v_165)
        v_167 = self.conv2d_65(v_166)
        v_168 = F.sigmoid(input=v_167)
        v_169 = (v_163 + (v_167 * v_168))
        v_170 = self.conv2d_66(v_169)
        v_171 = F.silu(input=v_170)
        v_172 = self.conv2d_67(v_171)
        v_173 = F.sigmoid(input=v_172)
        v_174 = (v_169 + (v_172 * v_173))
        v_175 = torch.cat((v_174, v_164), dim=1)
        v_176 = self.conv2d_68(v_175)
        v_177 = F.silu(input=v_176)
        v_178 = torch.cat((v_142, v_143, v_160, v_177), dim=1)
        v_179 = self.conv2d_69(v_178)
        v_180 = F.silu(input=v_179)
        v_181 = self.conv2d_70(v_180)
        v_182 = F.silu(input=v_181)
        v_183 = F.max_pool2d(input=v_182, ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        v_184 = F.max_pool2d(input=v_183, ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        v_185 = F.max_pool2d(input=v_184, ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        v_186 = torch.cat((v_182, v_183, v_184, v_185), dim=1)
        v_187 = self.conv2d_71(v_186)
        v_188 = F.silu(input=v_187)
        v_189 = self.conv2d_72(v_188)
        v_190 = F.silu(input=v_189)
        v_191, v_192 = torch.split(tensor=v_190, dim=1, split_size_or_sections=(256,256))
        v_193 = self.conv2d_73(v_192)
        v_194 = v_193.reshape(1, 4, 128, -1)
        v_195, v_196, v_197 = torch.split(tensor=v_194, dim=2, split_size_or_sections=(32,32,64))
        v_198 = v_195.permute(dims=(0,1,3,2))
        v_199 = [1, 256, v_193.size(2), v_193.size(3)]
        v_200 = v_197.reshape(*v_199)
        v_201 = torch.matmul(input=v_198, other=v_196)
        v_202 = self.conv2d_74(v_200)
        v_203 = (v_201 * 0.176777)
        v_204 = F.softmax(input=v_203, dim=-1)
        v_205 = v_204.permute(dims=(0,1,3,2))
        v_206 = torch.matmul(input=v_197, other=v_205)
        v_207 = v_206.reshape(*v_199)
        v_208 = (v_207 + v_202)
        v_209 = self.conv2d_75(v_208)
        v_210 = (v_192 + v_209)
        v_211 = self.conv2d_76(v_210)
        v_212 = F.silu(input=v_211)
        v_213 = self.conv2d_77(v_212)
        v_214 = (v_210 + v_213)
        v_215 = self.conv2d_78(v_214)
        v_216 = v_215.reshape(1, 4, 128, -1)
        v_217, v_218, v_219 = torch.split(tensor=v_216, dim=2, split_size_or_sections=(32,32,64))
        v_220 = v_217.permute(dims=(0,1,3,2))
        v_221 = [1, 256, v_215.size(2), v_215.size(3)]
        v_222 = v_219.reshape(*v_221)
        v_223 = torch.matmul(input=v_220, other=v_218)
        v_224 = self.conv2d_79(v_222)
        v_225 = (v_223 * 0.176777)
        v_226 = F.softmax(input=v_225, dim=-1)
        v_227 = v_226.permute(dims=(0,1,3,2))
        v_228 = torch.matmul(input=v_219, other=v_227)
        v_229 = v_228.reshape(*v_221)
        v_230 = (v_229 + v_224)
        v_231 = self.conv2d_80(v_230)
        v_232 = (v_214 + v_231)
        v_233 = self.conv2d_81(v_232)
        v_234 = F.silu(input=v_233)
        v_235 = self.conv2d_82(v_234)
        v_236 = (v_232 + v_235)
        v_237 = torch.cat((v_191, v_236), dim=1)
        v_238 = self.conv2d_83(v_237)
        v_239 = F.silu(input=v_238)
        v_240 = F.upsample_nearest(input=v_239, scale_factor=(2.0,2.0))
        v_241 = torch.cat((v_240, v_137), dim=1)
        v_242 = self.conv2d_84(v_241)
        v_243 = F.silu(input=v_242)
        v_244, v_245 = torch.split(tensor=v_243, dim=1, split_size_or_sections=(256,256))
        v_246 = self.conv2d_85(v_245)
        v_247 = self.conv2d_86(v_245)
        v_248 = F.silu(input=v_246)
        v_249 = F.silu(input=v_247)
        v_250 = self.conv2d_87(v_248)
        v_251 = F.silu(input=v_250)
        v_252 = self.conv2d_88(v_251)
        v_253 = F.sigmoid(input=v_252)
        v_254 = (v_248 + (v_252 * v_253))
        v_255 = self.conv2d_89(v_254)
        v_256 = F.silu(input=v_255)
        v_257 = self.conv2d_90(v_256)
        v_258 = F.sigmoid(input=v_257)
        v_259 = (v_254 + (v_257 * v_258))
        v_260 = torch.cat((v_259, v_249), dim=1)
        v_261 = self.conv2d_91(v_260)
        v_262 = F.silu(input=v_261)
        v_263 = self.conv2d_92(v_262)
        v_264 = self.conv2d_93(v_262)
        v_265 = F.silu(input=v_263)
        v_266 = F.silu(input=v_264)
        v_267 = self.conv2d_94(v_265)
        v_268 = F.silu(input=v_267)
        v_269 = self.conv2d_95(v_268)
        v_270 = F.sigmoid(input=v_269)
        v_271 = (v_265 + (v_269 * v_270))
        v_272 = self.conv2d_96(v_271)
        v_273 = F.silu(input=v_272)
        v_274 = self.conv2d_97(v_273)
        v_275 = F.sigmoid(input=v_274)
        v_276 = (v_271 + (v_274 * v_275))
        v_277 = torch.cat((v_276, v_266), dim=1)
        v_278 = self.conv2d_98(v_277)
        v_279 = F.silu(input=v_278)
        v_280 = torch.cat((v_244, v_245, v_262, v_279), dim=1)
        v_281 = self.conv2d_99(v_280)
        v_282 = F.silu(input=v_281)
        v_283 = F.upsample_nearest(input=v_282, scale_factor=(2.0,2.0))
        v_284 = torch.cat((v_283, v_94), dim=1)
        v_285 = self.conv2d_100(v_284)
        v_286 = F.silu(input=v_285)
        v_287, v_288 = torch.split(tensor=v_286, dim=1, split_size_or_sections=(128,128))
        v_289 = self.conv2d_101(v_288)
        v_290 = self.conv2d_102(v_288)
        v_291 = F.silu(input=v_289)
        v_292 = F.silu(input=v_290)
        v_293 = self.conv2d_103(v_291)
        v_294 = F.silu(input=v_293)
        v_295 = self.conv2d_104(v_294)
        v_296 = F.sigmoid(input=v_295)
        v_297 = (v_291 + (v_295 * v_296))
        v_298 = self.conv2d_105(v_297)
        v_299 = F.silu(input=v_298)
        v_300 = self.conv2d_106(v_299)
        v_301 = F.sigmoid(input=v_300)
        v_302 = (v_297 + (v_300 * v_301))
        v_303 = torch.cat((v_302, v_292), dim=1)
        v_304 = self.conv2d_107(v_303)
        v_305 = F.silu(input=v_304)
        v_306 = self.conv2d_108(v_305)
        v_307 = self.conv2d_109(v_305)
        v_308 = F.silu(input=v_306)
        v_309 = F.silu(input=v_307)
        v_310 = self.conv2d_110(v_308)
        v_311 = F.silu(input=v_310)
        v_312 = self.conv2d_111(v_311)
        v_313 = F.sigmoid(input=v_312)
        v_314 = (v_308 + (v_312 * v_313))
        v_315 = self.conv2d_112(v_314)
        v_316 = F.silu(input=v_315)
        v_317 = self.conv2d_113(v_316)
        v_318 = F.sigmoid(input=v_317)
        v_319 = (v_314 + (v_317 * v_318))
        v_320 = torch.cat((v_319, v_309), dim=1)
        v_321 = self.conv2d_114(v_320)
        v_322 = F.silu(input=v_321)
        v_323 = torch.cat((v_287, v_288, v_305, v_322), dim=1)
        v_324 = self.conv2d_115(v_323)
        v_325 = F.silu(input=v_324)
        v_326 = self.conv2d_116(v_325)
        v_327 = self.conv2d_117(v_325)
        v_328 = self.conv2d_118(v_325)
        v_329 = self.conv2d_119(v_325)
        v_330 = self.conv2d_120(v_325)
        v_331 = F.silu(input=v_326)
        v_332 = F.silu(input=v_327)
        v_333 = F.silu(input=v_328)
        v_334 = F.silu(input=v_329)
        v_335 = F.silu(input=v_330)
        v_336 = torch.cat((v_331, v_282), dim=1)
        v_337 = self.conv_transpose2d_0(v_332)
        v_338 = self.conv2d_121(v_333)
        v_339 = self.conv2d_122(v_334)
        v_340 = self.conv2d_123(v_335)
        v_341 = self.conv2d_124(v_336)
        v_342 = self.conv2d_125(v_337)
        v_343 = F.silu(input=v_338)
        v_344 = F.silu(input=v_339)
        v_345 = F.silu(input=v_340)
        v_346 = F.silu(input=v_341)
        v_347 = F.silu(input=v_342)
        v_348 = self.conv2d_126(v_343)
        v_349 = self.conv2d_127(v_344)
        v_350 = self.conv2d_128(v_345)
        v_351, v_352 = torch.split(tensor=v_346, dim=1, split_size_or_sections=(256,256))
        v_353 = self.conv2d_129(v_347)
        v_354 = torch.flatten(input=v_348, end_dim=-1, start_dim=2)
        v_355 = torch.transpose(input=v_354, dim0=1, dim1=2)
        v_356 = self.conv2d_130(v_352)
        v_357 = self.conv2d_131(v_352)
        v_358 = F.silu(input=v_350)
        v_359 = F.silu(input=v_353)
        v_360 = self.conv2d_132(v_358)
        v_361 = F.silu(input=v_356)
        v_362 = F.silu(input=v_357)
        v_363 = self.conv2d_133(v_361)
        v_364 = F.silu(input=v_360)
        v_365 = F.conv2d(input=v_364, weight=v_1, bias=v_2, dilation=(1,1), groups=1, padding=(0,0), stride=(1,1))
        v_366 = F.silu(input=v_363)
        v_367 = torch.cat((v_349, v_365), dim=1)
        v_368 = self.conv2d_135(v_366)
        v_369 = [1, v_367.size(1), -1]
        v_370 = v_367.reshape(*v_369)
        v_371 = torch.transpose(input=v_370, dim0=1, dim1=2)
        v_372 = F.sigmoid(input=v_368)
        v_373 = (v_361 + (v_368 * v_372))
        v_374 = self.conv2d_136(v_373)
        v_375 = F.silu(input=v_374)
        v_376 = self.conv2d_137(v_375)
        v_377 = F.sigmoid(input=v_376)
        v_378 = (v_373 + (v_376 * v_377))
        v_379 = torch.cat((v_378, v_362), dim=1)
        v_380 = self.conv2d_138(v_379)
        v_381 = F.silu(input=v_380)
        v_382 = self.conv2d_139(v_381)
        v_383 = self.conv2d_140(v_381)
        v_384 = F.silu(input=v_382)
        v_385 = F.silu(input=v_383)
        v_386 = self.conv2d_141(v_384)
        v_387 = F.silu(input=v_386)
        v_388 = self.conv2d_142(v_387)
        v_389 = F.sigmoid(input=v_388)
        v_390 = (v_384 + (v_388 * v_389))
        v_391 = self.conv2d_143(v_390)
        v_392 = F.silu(input=v_391)
        v_393 = self.conv2d_144(v_392)
        v_394 = F.sigmoid(input=v_393)
        v_395 = (v_390 + (v_393 * v_394))
        v_396 = torch.cat((v_395, v_385), dim=1)
        v_397 = self.conv2d_145(v_396)
        v_398 = F.silu(input=v_397)
        v_399 = torch.cat((v_351, v_352, v_381, v_398), dim=1)
        v_400 = self.conv2d_146(v_399)
        v_401 = F.silu(input=v_400)
        v_402 = self.conv2d_147(v_401)
        v_403 = self.conv2d_148(v_401)
        v_404 = self.conv2d_149(v_401)
        v_405 = self.conv2d_150(v_401)
        v_406 = F.silu(input=v_402)
        v_407 = F.silu(input=v_403)
        v_408 = F.silu(input=v_404)
        v_409 = F.silu(input=v_405)
        v_410 = torch.cat((v_406, v_239), dim=1)
        v_411 = self.conv2d_151(v_407)
        v_412 = self.conv2d_152(v_408)
        v_413 = self.conv2d_153(v_409)
        v_414 = self.conv2d_154(v_410)
        v_415 = F.silu(input=v_411)
        v_416 = F.silu(input=v_412)
        v_417 = F.silu(input=v_413)
        v_418 = F.silu(input=v_414)
        v_419 = self.conv2d_155(v_415)
        v_420 = self.conv2d_156(v_416)
        v_421 = self.conv2d_157(v_417)
        v_422, v_423 = torch.split(tensor=v_418, dim=1, split_size_or_sections=(256,256))
        v_424 = torch.flatten(input=v_419, end_dim=-1, start_dim=2)
        v_425 = torch.transpose(input=v_424, dim0=1, dim1=2)
        v_426 = self.conv2d_158(v_423)
        v_427 = self.conv2d_159(v_423)
        v_428 = F.silu(input=v_421)
        v_429 = self.conv2d_160(v_428)
        v_430 = F.silu(input=v_426)
        v_431 = F.silu(input=v_427)
        v_432 = self.conv2d_161(v_430)
        v_433 = F.silu(input=v_429)
        v_434 = F.conv2d(input=v_433, weight=v_3, bias=v_4, dilation=(1,1), groups=1, padding=(0,0), stride=(1,1))
        v_435 = F.silu(input=v_432)
        v_436 = torch.cat((v_420, v_434), dim=1)
        v_437 = self.conv2d_163(v_435)
        v_438 = [1, v_436.size(1), -1]
        v_439 = v_436.reshape(*v_438)
        v_440 = torch.transpose(input=v_439, dim0=1, dim1=2)
        v_441 = F.sigmoid(input=v_437)
        v_442 = (v_430 + (v_437 * v_441))
        v_443 = self.conv2d_164(v_442)
        v_444 = F.silu(input=v_443)
        v_445 = self.conv2d_165(v_444)
        v_446 = F.sigmoid(input=v_445)
        v_447 = (v_442 + (v_445 * v_446))
        v_448 = torch.cat((v_447, v_431), dim=1)
        v_449 = self.conv2d_166(v_448)
        v_450 = F.silu(input=v_449)
        v_451 = self.conv2d_167(v_450)
        v_452 = self.conv2d_168(v_450)
        v_453 = F.silu(input=v_451)
        v_454 = F.silu(input=v_452)
        v_455 = self.conv2d_169(v_453)
        v_456 = F.silu(input=v_455)
        v_457 = self.conv2d_170(v_456)
        v_458 = F.sigmoid(input=v_457)
        v_459 = (v_453 + (v_457 * v_458))
        v_460 = self.conv2d_171(v_459)
        v_461 = F.silu(input=v_460)
        v_462 = self.conv2d_172(v_461)
        v_463 = F.sigmoid(input=v_462)
        v_464 = (v_459 + (v_462 * v_463))
        v_465 = torch.cat((v_464, v_454), dim=1)
        v_466 = self.conv2d_173(v_465)
        v_467 = F.silu(input=v_466)
        v_468 = torch.cat((v_422, v_423, v_450, v_467), dim=1)
        v_469 = self.conv2d_174(v_468)
        v_470 = F.silu(input=v_469)
        v_471 = self.conv2d_175(v_470)
        v_472 = self.conv2d_176(v_470)
        v_473 = self.conv2d_177(v_470)
        v_474 = F.silu(input=v_471)
        v_475 = F.silu(input=v_472)
        v_476 = F.silu(input=v_473)
        v_477 = self.conv2d_178(v_474)
        v_478 = self.conv2d_179(v_475)
        v_479 = self.conv2d_180(v_476)
        v_480 = F.silu(input=v_477)
        v_481 = F.silu(input=v_478)
        v_482 = F.silu(input=v_479)
        v_483 = self.conv2d_181(v_480)
        v_484 = self.conv2d_182(v_481)
        v_485 = self.conv2d_183(v_482)
        v_486 = torch.flatten(input=v_483, end_dim=-1, start_dim=2)
        v_487 = torch.transpose(input=v_486, dim0=1, dim1=2)
        v_488 = torch.cat((v_355, v_425, v_487), dim=1)
        v_489 = F.silu(input=v_485)
        v_490 = self.conv2d_184(v_489)
        v_491 = F.silu(input=v_490)
        v_492 = F.conv2d(input=v_491, weight=v_5, bias=v_6, dilation=(1,1), groups=1, padding=(0,0), stride=(1,1))
        v_493 = torch.cat((v_484, v_492), dim=1)
        v_494 = [1, v_493.size(1), -1]
        v_495 = v_493.reshape(*v_494)
        v_496 = torch.transpose(input=v_495, dim0=1, dim1=2)
        v_497 = torch.cat((v_371, v_440, v_496), dim=1)
        v_498 = (v_497, v_488, v_359, )
        return v_498

def export_torchscript():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, -1, -1, dtype=torch.float)
    v_1 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_2 = torch.rand(-1, dtype=torch.float)
    v_3 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_4 = torch.rand(-1, dtype=torch.float)
    v_5 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_6 = torch.rand(-1, dtype=torch.float)

    mod = torch.jit.trace(net, (v_0, v_1, v_2, v_3, v_4, v_5, v_6))
    mod.save("yoloe_11l_seg_pnnx_rebuild_pnnx.py.pt")

def export_onnx():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, -1, -1, dtype=torch.float)
    v_1 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_2 = torch.rand(-1, dtype=torch.float)
    v_3 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_4 = torch.rand(-1, dtype=torch.float)
    v_5 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_6 = torch.rand(-1, dtype=torch.float)

    torch.onnx.export(net, (v_0, v_1, v_2, v_3, v_4, v_5, v_6), "yoloe_11l_seg_pnnx_rebuild_pnnx.py.onnx", export_params=True, operator_export_type=torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK, opset_version=13, input_names=['in0', 'in1', 'in2', 'in3', 'in4', 'in5', 'in6'], output_names=['out0'])

@torch.no_grad()
def test_inference():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, 640, 640, dtype=torch.float)
    v_1 = torch.rand(1, 256, 1, 1, dtype=torch.float)
    v_2 = torch.rand(1, dtype=torch.float)
    v_3 = torch.rand(1, 256, 1, 1, dtype=torch.float)
    v_4 = torch.rand(1, dtype=torch.float)
    v_5 = torch.rand(1, 256, 1, 1, dtype=torch.float)
    v_6 = torch.rand(1, dtype=torch.float)

    return net(v_0, v_1, v_2, v_3, v_4, v_5, v_6)

if __name__ == "__main__":
    print(test_inference())
