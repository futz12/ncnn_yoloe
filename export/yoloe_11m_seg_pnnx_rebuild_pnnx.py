import os
import numpy as np
import tempfile, zipfile
import torch
import torch.nn as nn
import torch.nn.functional as F
try:
    import torchvision
    import torchaudio
except:
    pass

class Model(nn.Module):
    def __init__(self):
        super(Model, self).__init__()

        self.conv2d_1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=3, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_3 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_4 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_5 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_6 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_7 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_8 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_9 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_10 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_11 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=192, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_12 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_13 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_14 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_15 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_16 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_17 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_18 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_19 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_20 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_21 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_22 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_23 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_24 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_25 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_26 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_27 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_28 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_29 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_30 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_31 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=768, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_32 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_33 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_34 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_35 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_36 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_37 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_38 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_39 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_40 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_41 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=768, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_42 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_43 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_44 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_45 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_46 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_47 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_48 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_49 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_50 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_51 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_52 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_53 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_54 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_55 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_56 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_57 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_58 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_59 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=768, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_60 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_61 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_62 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_63 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_64 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_65 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_66 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_67 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_68 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_69 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_70 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_71 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_72 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_73 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv_transpose2d_0 = nn.ConvTranspose2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(2,2), out_channels=256, output_padding=(0,0), padding=(0,0), stride=(2,2))
        self.conv2d_74 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_75 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_76 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_77 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=768, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_78 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_79 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_80 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_81 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_82 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_83 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_84 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_85 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_86 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_88 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_89 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_90 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_91 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_92 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=768, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_93 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.conv2d_94 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_95 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_96 = nn.Conv2d(bias=True, dilation=(1,1), groups=512, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_97 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_98 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_99 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_100 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_101 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_102 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_103 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_104 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_105 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_106 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_107 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_109 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_110 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_111 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_112 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_113 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=768, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_114 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_115 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_116 = nn.Conv2d(bias=True, dilation=(1,1), groups=512, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_117 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_118 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_119 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_120 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_121 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.conv2d_122 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.conv2d_123 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))

        archive = zipfile.ZipFile('yoloe_11m_seg_pnnx_rebuild.pnnx.bin', 'r')
        self.conv2d_1.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_1.bias', (64), 'float32')
        self.conv2d_1.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_1.weight', (64,3,3,3), 'float32')
        self.conv2d_2.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_2.bias', (128), 'float32')
        self.conv2d_2.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_2.weight', (128,64,3,3), 'float32')
        self.conv2d_3.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_3.bias', (128), 'float32')
        self.conv2d_3.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_3.weight', (128,128,1,1), 'float32')
        self.conv2d_4.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_4.bias', (32), 'float32')
        self.conv2d_4.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_4.weight', (32,64,1,1), 'float32')
        self.conv2d_5.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_5.bias', (32), 'float32')
        self.conv2d_5.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_5.weight', (32,64,1,1), 'float32')
        self.conv2d_6.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_6.bias', (32), 'float32')
        self.conv2d_6.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_6.weight', (32,32,3,3), 'float32')
        self.conv2d_7.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_7.bias', (32), 'float32')
        self.conv2d_7.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_7.weight', (32,32,3,3), 'float32')
        self.conv2d_8.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_8.bias', (32), 'float32')
        self.conv2d_8.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_8.weight', (32,32,3,3), 'float32')
        self.conv2d_9.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_9.bias', (32), 'float32')
        self.conv2d_9.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_9.weight', (32,32,3,3), 'float32')
        self.conv2d_10.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_10.bias', (64), 'float32')
        self.conv2d_10.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_10.weight', (64,64,1,1), 'float32')
        self.conv2d_11.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_11.bias', (256), 'float32')
        self.conv2d_11.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_11.weight', (256,192,1,1), 'float32')
        self.conv2d_12.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_12.bias', (256), 'float32')
        self.conv2d_12.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_12.weight', (256,256,3,3), 'float32')
        self.conv2d_13.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_13.bias', (256), 'float32')
        self.conv2d_13.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_13.weight', (256,256,1,1), 'float32')
        self.conv2d_14.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_14.bias', (64), 'float32')
        self.conv2d_14.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_14.weight', (64,128,1,1), 'float32')
        self.conv2d_15.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_15.bias', (64), 'float32')
        self.conv2d_15.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_15.weight', (64,128,1,1), 'float32')
        self.conv2d_16.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_16.bias', (64), 'float32')
        self.conv2d_16.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_16.weight', (64,64,3,3), 'float32')
        self.conv2d_17.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_17.bias', (64), 'float32')
        self.conv2d_17.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_17.weight', (64,64,3,3), 'float32')
        self.conv2d_18.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_18.bias', (64), 'float32')
        self.conv2d_18.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_18.weight', (64,64,3,3), 'float32')
        self.conv2d_19.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_19.bias', (64), 'float32')
        self.conv2d_19.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_19.weight', (64,64,3,3), 'float32')
        self.conv2d_20.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_20.bias', (128), 'float32')
        self.conv2d_20.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_20.weight', (128,128,1,1), 'float32')
        self.conv2d_21.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_21.bias', (512), 'float32')
        self.conv2d_21.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_21.weight', (512,384,1,1), 'float32')
        self.conv2d_22.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_22.bias', (512), 'float32')
        self.conv2d_22.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_22.weight', (512,512,3,3), 'float32')
        self.conv2d_23.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_23.bias', (512), 'float32')
        self.conv2d_23.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_23.weight', (512,512,1,1), 'float32')
        self.conv2d_24.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_24.bias', (128), 'float32')
        self.conv2d_24.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_24.weight', (128,256,1,1), 'float32')
        self.conv2d_25.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_25.bias', (128), 'float32')
        self.conv2d_25.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_25.weight', (128,256,1,1), 'float32')
        self.conv2d_26.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_26.bias', (128), 'float32')
        self.conv2d_26.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_26.weight', (128,128,3,3), 'float32')
        self.conv2d_27.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_27.bias', (128), 'float32')
        self.conv2d_27.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_27.weight', (128,128,3,3), 'float32')
        self.conv2d_28.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_28.bias', (128), 'float32')
        self.conv2d_28.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_28.weight', (128,128,3,3), 'float32')
        self.conv2d_29.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_29.bias', (128), 'float32')
        self.conv2d_29.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_29.weight', (128,128,3,3), 'float32')
        self.conv2d_30.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_30.bias', (256), 'float32')
        self.conv2d_30.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_30.weight', (256,256,1,1), 'float32')
        self.conv2d_31.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_31.bias', (512), 'float32')
        self.conv2d_31.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_31.weight', (512,768,1,1), 'float32')
        self.conv2d_32.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_32.bias', (512), 'float32')
        self.conv2d_32.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_32.weight', (512,512,3,3), 'float32')
        self.conv2d_33.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_33.bias', (512), 'float32')
        self.conv2d_33.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_33.weight', (512,512,1,1), 'float32')
        self.conv2d_34.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_34.bias', (128), 'float32')
        self.conv2d_34.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_34.weight', (128,256,1,1), 'float32')
        self.conv2d_35.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_35.bias', (128), 'float32')
        self.conv2d_35.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_35.weight', (128,256,1,1), 'float32')
        self.conv2d_36.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_36.bias', (128), 'float32')
        self.conv2d_36.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_36.weight', (128,128,3,3), 'float32')
        self.conv2d_37.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_37.bias', (128), 'float32')
        self.conv2d_37.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_37.weight', (128,128,3,3), 'float32')
        self.conv2d_38.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_38.bias', (128), 'float32')
        self.conv2d_38.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_38.weight', (128,128,3,3), 'float32')
        self.conv2d_39.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_39.bias', (128), 'float32')
        self.conv2d_39.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_39.weight', (128,128,3,3), 'float32')
        self.conv2d_40.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_40.bias', (256), 'float32')
        self.conv2d_40.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_40.weight', (256,256,1,1), 'float32')
        self.conv2d_41.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_41.bias', (512), 'float32')
        self.conv2d_41.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_41.weight', (512,768,1,1), 'float32')
        self.conv2d_42.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_42.bias', (256), 'float32')
        self.conv2d_42.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_42.weight', (256,512,1,1), 'float32')
        self.conv2d_43.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_43.bias', (512), 'float32')
        self.conv2d_43.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_43.weight', (512,1024,1,1), 'float32')
        self.conv2d_44.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_44.bias', (512), 'float32')
        self.conv2d_44.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_44.weight', (512,512,1,1), 'float32')
        self.conv2d_45.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_45.bias', (512), 'float32')
        self.conv2d_45.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_45.weight', (512,256,1,1), 'float32')
        self.conv2d_46.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_46.bias', (256), 'float32')
        self.conv2d_46.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_46.weight', (256,1,3,3), 'float32')
        self.conv2d_47.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_47.bias', (256), 'float32')
        self.conv2d_47.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_47.weight', (256,256,1,1), 'float32')
        self.conv2d_48.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_48.bias', (512), 'float32')
        self.conv2d_48.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_48.weight', (512,256,1,1), 'float32')
        self.conv2d_49.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_49.bias', (256), 'float32')
        self.conv2d_49.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_49.weight', (256,512,1,1), 'float32')
        self.conv2d_50.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_50.bias', (512), 'float32')
        self.conv2d_50.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_50.weight', (512,512,1,1), 'float32')
        self.conv2d_51.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_51.bias', (512), 'float32')
        self.conv2d_51.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_51.weight', (512,1024,1,1), 'float32')
        self.conv2d_52.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_52.bias', (128), 'float32')
        self.conv2d_52.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_52.weight', (128,256,1,1), 'float32')
        self.conv2d_53.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_53.bias', (128), 'float32')
        self.conv2d_53.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_53.weight', (128,256,1,1), 'float32')
        self.conv2d_54.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_54.bias', (128), 'float32')
        self.conv2d_54.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_54.weight', (128,128,3,3), 'float32')
        self.conv2d_55.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_55.bias', (128), 'float32')
        self.conv2d_55.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_55.weight', (128,128,3,3), 'float32')
        self.conv2d_56.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_56.bias', (128), 'float32')
        self.conv2d_56.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_56.weight', (128,128,3,3), 'float32')
        self.conv2d_57.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_57.bias', (128), 'float32')
        self.conv2d_57.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_57.weight', (128,128,3,3), 'float32')
        self.conv2d_58.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_58.bias', (256), 'float32')
        self.conv2d_58.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_58.weight', (256,256,1,1), 'float32')
        self.conv2d_59.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_59.bias', (512), 'float32')
        self.conv2d_59.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_59.weight', (512,768,1,1), 'float32')
        self.conv2d_60.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_60.bias', (256), 'float32')
        self.conv2d_60.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_60.weight', (256,1024,1,1), 'float32')
        self.conv2d_61.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_61.bias', (64), 'float32')
        self.conv2d_61.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_61.weight', (64,128,1,1), 'float32')
        self.conv2d_62.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_62.bias', (64), 'float32')
        self.conv2d_62.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_62.weight', (64,128,1,1), 'float32')
        self.conv2d_63.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_63.bias', (64), 'float32')
        self.conv2d_63.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_63.weight', (64,64,3,3), 'float32')
        self.conv2d_64.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_64.bias', (64), 'float32')
        self.conv2d_64.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_64.weight', (64,64,3,3), 'float32')
        self.conv2d_65.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_65.bias', (64), 'float32')
        self.conv2d_65.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_65.weight', (64,64,3,3), 'float32')
        self.conv2d_66.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_66.bias', (64), 'float32')
        self.conv2d_66.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_66.weight', (64,64,3,3), 'float32')
        self.conv2d_67.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_67.bias', (128), 'float32')
        self.conv2d_67.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_67.weight', (128,128,1,1), 'float32')
        self.conv2d_68.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_68.bias', (256), 'float32')
        self.conv2d_68.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_68.weight', (256,384,1,1), 'float32')
        self.conv2d_69.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_69.bias', (256), 'float32')
        self.conv2d_69.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_69.weight', (256,256,3,3), 'float32')
        self.conv2d_70.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_70.bias', (256), 'float32')
        self.conv2d_70.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_70.weight', (256,256,3,3), 'float32')
        self.conv2d_71.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_71.bias', (64), 'float32')
        self.conv2d_71.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_71.weight', (64,256,3,3), 'float32')
        self.conv2d_72.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_72.bias', (64), 'float32')
        self.conv2d_72.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_72.weight', (64,256,3,3), 'float32')
        self.conv2d_73.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_73.bias', (256), 'float32')
        self.conv2d_73.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_73.weight', (256,1,3,3), 'float32')
        self.conv_transpose2d_0.bias = self.load_pnnx_bin_as_parameter(archive, 'conv_transpose2d_0.bias', (256), 'float32')
        self.conv_transpose2d_0.weight = self.load_pnnx_bin_as_parameter(archive, 'conv_transpose2d_0.weight', (256,256,2,2), 'float32')
        self.conv2d_74.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_74.bias', (64), 'float32')
        self.conv2d_74.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_74.weight', (64,64,3,3), 'float32')
        self.conv2d_75.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_75.bias', (64), 'float32')
        self.conv2d_75.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_75.weight', (64,64,3,3), 'float32')
        self.conv2d_76.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_76.bias', (256), 'float32')
        self.conv2d_76.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_76.weight', (256,256,1,1), 'float32')
        self.conv2d_77.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_77.bias', (512), 'float32')
        self.conv2d_77.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_77.weight', (512,768,1,1), 'float32')
        self.conv2d_78.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_78.bias', (256), 'float32')
        self.conv2d_78.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_78.weight', (256,256,3,3), 'float32')
        self.conv2d_79.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_79.bias', (32), 'float32')
        self.conv2d_79.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_79.weight', (32,64,1,1), 'float32')
        self.conv2d_80.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_80.bias', (64), 'float32')
        self.conv2d_80.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_80.weight', (64,64,1,1), 'float32')
        self.conv2d_81.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_81.bias', (256), 'float32')
        self.conv2d_81.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_81.weight', (256,1,3,3), 'float32')
        self.conv2d_82.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_82.bias', (32), 'float32')
        self.conv2d_82.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_82.weight', (32,256,1,1), 'float32')
        self.conv2d_83.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_83.bias', (128), 'float32')
        self.conv2d_83.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_83.weight', (128,256,1,1), 'float32')
        self.conv2d_84.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_84.bias', (128), 'float32')
        self.conv2d_84.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_84.weight', (128,256,1,1), 'float32')
        self.conv2d_85.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_85.bias', (256), 'float32')
        self.conv2d_85.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_85.weight', (256,256,1,1), 'float32')
        self.conv2d_86.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_86.bias', (128), 'float32')
        self.conv2d_86.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_86.weight', (128,128,3,3), 'float32')
        self.conv2d_88.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_88.bias', (128), 'float32')
        self.conv2d_88.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_88.weight', (128,128,3,3), 'float32')
        self.conv2d_89.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_89.bias', (128), 'float32')
        self.conv2d_89.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_89.weight', (128,128,3,3), 'float32')
        self.conv2d_90.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_90.bias', (128), 'float32')
        self.conv2d_90.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_90.weight', (128,128,3,3), 'float32')
        self.conv2d_91.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_91.bias', (256), 'float32')
        self.conv2d_91.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_91.weight', (256,256,1,1), 'float32')
        self.conv2d_92.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_92.bias', (512), 'float32')
        self.conv2d_92.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_92.weight', (512,768,1,1), 'float32')
        self.conv2d_93.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_93.bias', (512), 'float32')
        self.conv2d_93.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_93.weight', (512,512,3,3), 'float32')
        self.conv2d_94.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_94.bias', (64), 'float32')
        self.conv2d_94.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_94.weight', (64,512,3,3), 'float32')
        self.conv2d_95.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_95.bias', (64), 'float32')
        self.conv2d_95.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_95.weight', (64,512,3,3), 'float32')
        self.conv2d_96.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_96.bias', (512), 'float32')
        self.conv2d_96.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_96.weight', (512,1,3,3), 'float32')
        self.conv2d_97.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_97.bias', (64), 'float32')
        self.conv2d_97.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_97.weight', (64,64,3,3), 'float32')
        self.conv2d_98.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_98.bias', (64), 'float32')
        self.conv2d_98.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_98.weight', (64,64,3,3), 'float32')
        self.conv2d_99.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_99.bias', (256), 'float32')
        self.conv2d_99.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_99.weight', (256,512,1,1), 'float32')
        self.conv2d_100.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_100.bias', (512), 'float32')
        self.conv2d_100.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_100.weight', (512,1024,1,1), 'float32')
        self.conv2d_101.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_101.bias', (32), 'float32')
        self.conv2d_101.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_101.weight', (32,64,1,1), 'float32')
        self.conv2d_102.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_102.bias', (64), 'float32')
        self.conv2d_102.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_102.weight', (64,64,1,1), 'float32')
        self.conv2d_103.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_103.bias', (256), 'float32')
        self.conv2d_103.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_103.weight', (256,1,3,3), 'float32')
        self.conv2d_104.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_104.bias', (128), 'float32')
        self.conv2d_104.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_104.weight', (128,256,1,1), 'float32')
        self.conv2d_105.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_105.bias', (128), 'float32')
        self.conv2d_105.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_105.weight', (128,256,1,1), 'float32')
        self.conv2d_106.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_106.bias', (256), 'float32')
        self.conv2d_106.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_106.weight', (256,256,1,1), 'float32')
        self.conv2d_107.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_107.bias', (128), 'float32')
        self.conv2d_107.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_107.weight', (128,128,3,3), 'float32')
        self.conv2d_109.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_109.bias', (128), 'float32')
        self.conv2d_109.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_109.weight', (128,128,3,3), 'float32')
        self.conv2d_110.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_110.bias', (128), 'float32')
        self.conv2d_110.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_110.weight', (128,128,3,3), 'float32')
        self.conv2d_111.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_111.bias', (128), 'float32')
        self.conv2d_111.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_111.weight', (128,128,3,3), 'float32')
        self.conv2d_112.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_112.bias', (256), 'float32')
        self.conv2d_112.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_112.weight', (256,256,1,1), 'float32')
        self.conv2d_113.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_113.bias', (512), 'float32')
        self.conv2d_113.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_113.weight', (512,768,1,1), 'float32')
        self.conv2d_114.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_114.bias', (64), 'float32')
        self.conv2d_114.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_114.weight', (64,512,3,3), 'float32')
        self.conv2d_115.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_115.bias', (64), 'float32')
        self.conv2d_115.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_115.weight', (64,512,3,3), 'float32')
        self.conv2d_116.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_116.bias', (512), 'float32')
        self.conv2d_116.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_116.weight', (512,1,3,3), 'float32')
        self.conv2d_117.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_117.bias', (64), 'float32')
        self.conv2d_117.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_117.weight', (64,64,3,3), 'float32')
        self.conv2d_118.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_118.bias', (64), 'float32')
        self.conv2d_118.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_118.weight', (64,64,3,3), 'float32')
        self.conv2d_119.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_119.bias', (256), 'float32')
        self.conv2d_119.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_119.weight', (256,512,1,1), 'float32')
        self.conv2d_120.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_120.bias', (32), 'float32')
        self.conv2d_120.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_120.weight', (32,64,1,1), 'float32')
        self.conv2d_121.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_121.bias', (64), 'float32')
        self.conv2d_121.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_121.weight', (64,64,1,1), 'float32')
        self.conv2d_122.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_122.bias', (256), 'float32')
        self.conv2d_122.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_122.weight', (256,1,3,3), 'float32')
        self.conv2d_123.bias = self.load_pnnx_bin_as_parameter(archive, 'conv2d_123.bias', (256), 'float32')
        self.conv2d_123.weight = self.load_pnnx_bin_as_parameter(archive, 'conv2d_123.weight', (256,256,1,1), 'float32')
        archive.close()

    def load_pnnx_bin_as_parameter(self, archive, key, shape, dtype, requires_grad=True):
        return nn.Parameter(self.load_pnnx_bin_as_tensor(archive, key, shape, dtype), requires_grad)

    def load_pnnx_bin_as_tensor(self, archive, key, shape, dtype):
        fd, tmppath = tempfile.mkstemp()
        with os.fdopen(fd, 'wb') as tmpf, archive.open(key) as keyfile:
            tmpf.write(keyfile.read())
        m = np.memmap(tmppath, dtype=dtype, mode='r', shape=shape).copy()
        os.remove(tmppath)
        return torch.from_numpy(m)

    def forward(self, v_0, v_1, v_2, v_3, v_4, v_5, v_6):
        v_7 = self.conv2d_1(v_0)
        v_8 = F.silu(input=v_7)
        v_9 = self.conv2d_2(v_8)
        v_10 = F.silu(input=v_9)
        v_11 = self.conv2d_3(v_10)
        v_12 = F.silu(input=v_11)
        v_13, v_14 = torch.split(tensor=v_12, dim=1, split_size_or_sections=(64,64))
        v_15 = self.conv2d_4(v_14)
        v_16 = self.conv2d_5(v_14)
        v_17 = F.silu(input=v_15)
        v_18 = F.silu(input=v_16)
        v_19 = self.conv2d_6(v_17)
        v_20 = F.silu(input=v_19)
        v_21 = self.conv2d_7(v_20)
        v_22 = F.sigmoid(input=v_21)
        v_23 = (v_17 + (v_21 * v_22))
        v_24 = self.conv2d_8(v_23)
        v_25 = F.silu(input=v_24)
        v_26 = self.conv2d_9(v_25)
        v_27 = F.sigmoid(input=v_26)
        v_28 = (v_23 + (v_26 * v_27))
        v_29 = torch.cat((v_28, v_18), dim=1)
        v_30 = self.conv2d_10(v_29)
        v_31 = F.silu(input=v_30)
        v_32 = torch.cat((v_13, v_14, v_31), dim=1)
        v_33 = self.conv2d_11(v_32)
        v_34 = F.silu(input=v_33)
        v_35 = self.conv2d_12(v_34)
        v_36 = F.silu(input=v_35)
        v_37 = self.conv2d_13(v_36)
        v_38 = F.silu(input=v_37)
        v_39, v_40 = torch.split(tensor=v_38, dim=1, split_size_or_sections=(128,128))
        v_41 = self.conv2d_14(v_40)
        v_42 = self.conv2d_15(v_40)
        v_43 = F.silu(input=v_41)
        v_44 = F.silu(input=v_42)
        v_45 = self.conv2d_16(v_43)
        v_46 = F.silu(input=v_45)
        v_47 = self.conv2d_17(v_46)
        v_48 = F.sigmoid(input=v_47)
        v_49 = (v_43 + (v_47 * v_48))
        v_50 = self.conv2d_18(v_49)
        v_51 = F.silu(input=v_50)
        v_52 = self.conv2d_19(v_51)
        v_53 = F.sigmoid(input=v_52)
        v_54 = (v_49 + (v_52 * v_53))
        v_55 = torch.cat((v_54, v_44), dim=1)
        v_56 = self.conv2d_20(v_55)
        v_57 = F.silu(input=v_56)
        v_58 = torch.cat((v_39, v_40, v_57), dim=1)
        v_59 = self.conv2d_21(v_58)
        v_60 = F.silu(input=v_59)
        v_61 = self.conv2d_22(v_60)
        v_62 = F.silu(input=v_61)
        v_63 = self.conv2d_23(v_62)
        v_64 = F.silu(input=v_63)
        v_65, v_66 = torch.split(tensor=v_64, dim=1, split_size_or_sections=(256,256))
        v_67 = self.conv2d_24(v_66)
        v_68 = self.conv2d_25(v_66)
        v_69 = F.silu(input=v_67)
        v_70 = F.silu(input=v_68)
        v_71 = self.conv2d_26(v_69)
        v_72 = F.silu(input=v_71)
        v_73 = self.conv2d_27(v_72)
        v_74 = F.sigmoid(input=v_73)
        v_75 = (v_69 + (v_73 * v_74))
        v_76 = self.conv2d_28(v_75)
        v_77 = F.silu(input=v_76)
        v_78 = self.conv2d_29(v_77)
        v_79 = F.sigmoid(input=v_78)
        v_80 = (v_75 + (v_78 * v_79))
        v_81 = torch.cat((v_80, v_70), dim=1)
        v_82 = self.conv2d_30(v_81)
        v_83 = F.silu(input=v_82)
        v_84 = torch.cat((v_65, v_66, v_83), dim=1)
        v_85 = self.conv2d_31(v_84)
        v_86 = F.silu(input=v_85)
        v_87 = self.conv2d_32(v_86)
        v_88 = F.silu(input=v_87)
        v_89 = self.conv2d_33(v_88)
        v_90 = F.silu(input=v_89)
        v_91, v_92 = torch.split(tensor=v_90, dim=1, split_size_or_sections=(256,256))
        v_93 = self.conv2d_34(v_92)
        v_94 = self.conv2d_35(v_92)
        v_95 = F.silu(input=v_93)
        v_96 = F.silu(input=v_94)
        v_97 = self.conv2d_36(v_95)
        v_98 = F.silu(input=v_97)
        v_99 = self.conv2d_37(v_98)
        v_100 = F.sigmoid(input=v_99)
        v_101 = (v_95 + (v_99 * v_100))
        v_102 = self.conv2d_38(v_101)
        v_103 = F.silu(input=v_102)
        v_104 = self.conv2d_39(v_103)
        v_105 = F.sigmoid(input=v_104)
        v_106 = (v_101 + (v_104 * v_105))
        v_107 = torch.cat((v_106, v_96), dim=1)
        v_108 = self.conv2d_40(v_107)
        v_109 = F.silu(input=v_108)
        v_110 = torch.cat((v_91, v_92, v_109), dim=1)
        v_111 = self.conv2d_41(v_110)
        v_112 = F.silu(input=v_111)
        v_113 = self.conv2d_42(v_112)
        v_114 = F.silu(input=v_113)
        v_115 = F.max_pool2d(input=v_114, ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        v_116 = F.max_pool2d(input=v_115, ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        v_117 = F.max_pool2d(input=v_116, ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        v_118 = torch.cat((v_114, v_115, v_116, v_117), dim=1)
        v_119 = self.conv2d_43(v_118)
        v_120 = F.silu(input=v_119)
        v_121 = self.conv2d_44(v_120)
        v_122 = F.silu(input=v_121)
        v_123, v_124 = torch.split(tensor=v_122, dim=1, split_size_or_sections=(256,256))
        v_125 = self.conv2d_45(v_124)
        v_126 = v_125.reshape(1, 4, 128, -1)
        v_127, v_128, v_129 = torch.split(tensor=v_126, dim=2, split_size_or_sections=(32,32,64))
        v_130 = v_127.permute(dims=(0,1,3,2))
        v_131 = [1, 256, v_125.size(2), v_125.size(3)]
        v_132 = v_129.reshape(*v_131)
        v_133 = torch.matmul(input=v_130, other=v_128)
        v_134 = self.conv2d_46(v_132)
        v_135 = (v_133 * 0.176777)
        v_136 = F.softmax(input=v_135, dim=-1)
        v_137 = v_136.permute(dims=(0,1,3,2))
        v_138 = torch.matmul(input=v_129, other=v_137)
        v_139 = v_138.reshape(*v_131)
        v_140 = (v_139 + v_134)
        v_141 = self.conv2d_47(v_140)
        v_142 = (v_124 + v_141)
        v_143 = self.conv2d_48(v_142)
        v_144 = F.silu(input=v_143)
        v_145 = self.conv2d_49(v_144)
        v_146 = (v_142 + v_145)
        v_147 = torch.cat((v_123, v_146), dim=1)
        v_148 = self.conv2d_50(v_147)
        v_149 = F.silu(input=v_148)
        v_150 = F.upsample_nearest(input=v_149, scale_factor=(2.0,2.0))
        v_151 = torch.cat((v_150, v_86), dim=1)
        v_152 = self.conv2d_51(v_151)
        v_153 = F.silu(input=v_152)
        v_154, v_155 = torch.split(tensor=v_153, dim=1, split_size_or_sections=(256,256))
        v_156 = self.conv2d_52(v_155)
        v_157 = self.conv2d_53(v_155)
        v_158 = F.silu(input=v_156)
        v_159 = F.silu(input=v_157)
        v_160 = self.conv2d_54(v_158)
        v_161 = F.silu(input=v_160)
        v_162 = self.conv2d_55(v_161)
        v_163 = F.sigmoid(input=v_162)
        v_164 = (v_158 + (v_162 * v_163))
        v_165 = self.conv2d_56(v_164)
        v_166 = F.silu(input=v_165)
        v_167 = self.conv2d_57(v_166)
        v_168 = F.sigmoid(input=v_167)
        v_169 = (v_164 + (v_167 * v_168))
        v_170 = torch.cat((v_169, v_159), dim=1)
        v_171 = self.conv2d_58(v_170)
        v_172 = F.silu(input=v_171)
        v_173 = torch.cat((v_154, v_155, v_172), dim=1)
        v_174 = self.conv2d_59(v_173)
        v_175 = F.silu(input=v_174)
        v_176 = F.upsample_nearest(input=v_175, scale_factor=(2.0,2.0))
        v_177 = torch.cat((v_176, v_60), dim=1)
        v_178 = self.conv2d_60(v_177)
        v_179 = F.silu(input=v_178)
        v_180, v_181 = torch.split(tensor=v_179, dim=1, split_size_or_sections=(128,128))
        v_182 = self.conv2d_61(v_181)
        v_183 = self.conv2d_62(v_181)
        v_184 = F.silu(input=v_182)
        v_185 = F.silu(input=v_183)
        v_186 = self.conv2d_63(v_184)
        v_187 = F.silu(input=v_186)
        v_188 = self.conv2d_64(v_187)
        v_189 = F.sigmoid(input=v_188)
        v_190 = (v_184 + (v_188 * v_189))
        v_191 = self.conv2d_65(v_190)
        v_192 = F.silu(input=v_191)
        v_193 = self.conv2d_66(v_192)
        v_194 = F.sigmoid(input=v_193)
        v_195 = (v_190 + (v_193 * v_194))
        v_196 = torch.cat((v_195, v_185), dim=1)
        v_197 = self.conv2d_67(v_196)
        v_198 = F.silu(input=v_197)
        v_199 = torch.cat((v_180, v_181, v_198), dim=1)
        v_200 = self.conv2d_68(v_199)
        v_201 = F.silu(input=v_200)
        v_202 = self.conv2d_69(v_201)
        v_203 = self.conv2d_70(v_201)
        v_204 = self.conv2d_71(v_201)
        v_205 = self.conv2d_72(v_201)
        v_206 = self.conv2d_73(v_201)
        v_207 = F.silu(input=v_202)
        v_208 = F.silu(input=v_203)
        v_209 = F.silu(input=v_204)
        v_210 = F.silu(input=v_205)
        v_211 = F.silu(input=v_206)
        v_212 = torch.cat((v_207, v_175), dim=1)
        v_213 = self.conv_transpose2d_0(v_208)
        v_214 = self.conv2d_74(v_209)
        v_215 = self.conv2d_75(v_210)
        v_216 = self.conv2d_76(v_211)
        v_217 = self.conv2d_77(v_212)
        v_218 = self.conv2d_78(v_213)
        v_219 = F.silu(input=v_214)
        v_220 = F.silu(input=v_215)
        v_221 = F.silu(input=v_216)
        v_222 = F.silu(input=v_217)
        v_223 = F.silu(input=v_218)
        v_224 = self.conv2d_79(v_219)
        v_225 = self.conv2d_80(v_220)
        v_226 = self.conv2d_81(v_221)
        v_227, v_228 = torch.split(tensor=v_222, dim=1, split_size_or_sections=(256,256))
        v_229 = self.conv2d_82(v_223)
        v_230 = torch.flatten(input=v_224, end_dim=-1, start_dim=2)
        v_231 = torch.transpose(input=v_230, dim0=1, dim1=2)
        v_232 = self.conv2d_83(v_228)
        v_233 = self.conv2d_84(v_228)
        v_234 = F.silu(input=v_226)
        v_235 = F.silu(input=v_229)
        v_236 = self.conv2d_85(v_234)
        v_237 = F.silu(input=v_232)
        v_238 = F.silu(input=v_233)
        v_239 = self.conv2d_86(v_237)
        v_240 = F.silu(input=v_236)
        v_241 = F.conv2d(input=v_240, weight=v_1, bias=v_2, dilation=(1,1), groups=1, padding=(0,0), stride=(1,1))
        v_242 = F.silu(input=v_239)
        v_243 = torch.cat((v_225, v_241), dim=1)
        v_244 = self.conv2d_88(v_242)
        v_245 = [1, v_243.size(1), -1]
        v_246 = v_243.reshape(*v_245)
        v_247 = torch.transpose(input=v_246, dim0=1, dim1=2)
        v_248 = F.sigmoid(input=v_244)
        v_249 = (v_237 + (v_244 * v_248))
        v_250 = self.conv2d_89(v_249)
        v_251 = F.silu(input=v_250)
        v_252 = self.conv2d_90(v_251)
        v_253 = F.sigmoid(input=v_252)
        v_254 = (v_249 + (v_252 * v_253))
        v_255 = torch.cat((v_254, v_238), dim=1)
        v_256 = self.conv2d_91(v_255)
        v_257 = F.silu(input=v_256)
        v_258 = torch.cat((v_227, v_228, v_257), dim=1)
        v_259 = self.conv2d_92(v_258)
        v_260 = F.silu(input=v_259)
        v_261 = self.conv2d_93(v_260)
        v_262 = self.conv2d_94(v_260)
        v_263 = self.conv2d_95(v_260)
        v_264 = self.conv2d_96(v_260)
        v_265 = F.silu(input=v_261)
        v_266 = F.silu(input=v_262)
        v_267 = F.silu(input=v_263)
        v_268 = F.silu(input=v_264)
        v_269 = torch.cat((v_265, v_149), dim=1)
        v_270 = self.conv2d_97(v_266)
        v_271 = self.conv2d_98(v_267)
        v_272 = self.conv2d_99(v_268)
        v_273 = self.conv2d_100(v_269)
        v_274 = F.silu(input=v_270)
        v_275 = F.silu(input=v_271)
        v_276 = F.silu(input=v_272)
        v_277 = F.silu(input=v_273)
        v_278 = self.conv2d_101(v_274)
        v_279 = self.conv2d_102(v_275)
        v_280 = self.conv2d_103(v_276)
        v_281, v_282 = torch.split(tensor=v_277, dim=1, split_size_or_sections=(256,256))
        v_283 = torch.flatten(input=v_278, end_dim=-1, start_dim=2)
        v_284 = torch.transpose(input=v_283, dim0=1, dim1=2)
        v_285 = self.conv2d_104(v_282)
        v_286 = self.conv2d_105(v_282)
        v_287 = F.silu(input=v_280)
        v_288 = self.conv2d_106(v_287)
        v_289 = F.silu(input=v_285)
        v_290 = F.silu(input=v_286)
        v_291 = self.conv2d_107(v_289)
        v_292 = F.silu(input=v_288)
        v_293 = F.conv2d(input=v_292, weight=v_3, bias=v_4, dilation=(1,1), groups=1, padding=(0,0), stride=(1,1))
        v_294 = F.silu(input=v_291)
        v_295 = torch.cat((v_279, v_293), dim=1)
        v_296 = self.conv2d_109(v_294)
        v_297 = [1, v_295.size(1), -1]
        v_298 = v_295.reshape(*v_297)
        v_299 = torch.transpose(input=v_298, dim0=1, dim1=2)
        v_300 = F.sigmoid(input=v_296)
        v_301 = (v_289 + (v_296 * v_300))
        v_302 = self.conv2d_110(v_301)
        v_303 = F.silu(input=v_302)
        v_304 = self.conv2d_111(v_303)
        v_305 = F.sigmoid(input=v_304)
        v_306 = (v_301 + (v_304 * v_305))
        v_307 = torch.cat((v_306, v_290), dim=1)
        v_308 = self.conv2d_112(v_307)
        v_309 = F.silu(input=v_308)
        v_310 = torch.cat((v_281, v_282, v_309), dim=1)
        v_311 = self.conv2d_113(v_310)
        v_312 = F.silu(input=v_311)
        v_313 = self.conv2d_114(v_312)
        v_314 = self.conv2d_115(v_312)
        v_315 = self.conv2d_116(v_312)
        v_316 = F.silu(input=v_313)
        v_317 = F.silu(input=v_314)
        v_318 = F.silu(input=v_315)
        v_319 = self.conv2d_117(v_316)
        v_320 = self.conv2d_118(v_317)
        v_321 = self.conv2d_119(v_318)
        v_322 = F.silu(input=v_319)
        v_323 = F.silu(input=v_320)
        v_324 = F.silu(input=v_321)
        v_325 = self.conv2d_120(v_322)
        v_326 = self.conv2d_121(v_323)
        v_327 = self.conv2d_122(v_324)
        v_328 = torch.flatten(input=v_325, end_dim=-1, start_dim=2)
        v_329 = torch.transpose(input=v_328, dim0=1, dim1=2)
        v_330 = torch.cat((v_231, v_284, v_329), dim=1)
        v_331 = F.silu(input=v_327)
        v_332 = self.conv2d_123(v_331)
        v_333 = F.silu(input=v_332)
        v_334 = F.conv2d(input=v_333, weight=v_5, bias=v_6, dilation=(1,1), groups=1, padding=(0,0), stride=(1,1))
        v_335 = torch.cat((v_326, v_334), dim=1)
        v_336 = [1, v_335.size(1), -1]
        v_337 = v_335.reshape(*v_336)
        v_338 = torch.transpose(input=v_337, dim0=1, dim1=2)
        v_339 = torch.cat((v_247, v_299, v_338), dim=1)
        v_340 = (v_339, v_330, v_235, )
        return v_340

def export_torchscript():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, -1, -1, dtype=torch.float)
    v_1 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_2 = torch.rand(-1, dtype=torch.float)
    v_3 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_4 = torch.rand(-1, dtype=torch.float)
    v_5 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_6 = torch.rand(-1, dtype=torch.float)

    mod = torch.jit.trace(net, (v_0, v_1, v_2, v_3, v_4, v_5, v_6))
    mod.save("yoloe_11m_seg_pnnx_rebuild_pnnx.py.pt")

def export_onnx():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, -1, -1, dtype=torch.float)
    v_1 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_2 = torch.rand(-1, dtype=torch.float)
    v_3 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_4 = torch.rand(-1, dtype=torch.float)
    v_5 = torch.rand(-1, 256, 1, 1, dtype=torch.float)
    v_6 = torch.rand(-1, dtype=torch.float)

    torch.onnx.export(net, (v_0, v_1, v_2, v_3, v_4, v_5, v_6), "yoloe_11m_seg_pnnx_rebuild_pnnx.py.onnx", export_params=True, operator_export_type=torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK, opset_version=13, input_names=['in0', 'in1', 'in2', 'in3', 'in4', 'in5', 'in6'], output_names=['out0'])

@torch.no_grad()
def test_inference():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, 640, 640, dtype=torch.float)
    v_1 = torch.rand(1, 256, 1, 1, dtype=torch.float)
    v_2 = torch.rand(1, dtype=torch.float)
    v_3 = torch.rand(1, 256, 1, 1, dtype=torch.float)
    v_4 = torch.rand(1, dtype=torch.float)
    v_5 = torch.rand(1, 256, 1, 1, dtype=torch.float)
    v_6 = torch.rand(1, dtype=torch.float)

    return net(v_0, v_1, v_2, v_3, v_4, v_5, v_6)

if __name__ == "__main__":
    print(test_inference())
